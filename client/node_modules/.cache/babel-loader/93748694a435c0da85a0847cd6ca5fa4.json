{"ast":null,"code":"var _jsxFileName = \"/Users/claudiacortell/Desktop/Barnard/Fall 2023/COMS 3102/final-project-keeper-app/client/src/components/App.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Note from \"./Note\";\n// import notes from \"../notes\";\nimport Footer from \"./Footer\";\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  // const [allNotes, setAllNotes] = useState(notes); //remove at some point\n  const [backendData, setBackendData] = useState([{}]); // storing backend data\n  const [dataUpdated, setDataUpdated] = useState(true); // useeffect dependency\n\n  function handleChangeTitle(event) {\n    //   console.log(event.target.value);\n    setTitle(event.target.value);\n  }\n  function handleChangeContent(event) {\n    // console.log(event.target.value);\n    setContent(event.target.value);\n  }\n  function deleteNote(id) {\n    console.log(\"trying to delete \".concat(id));\n    // const updatedNotes = allNotes.filter((note) => note.key !== id);\n\n    // const updatedNotesKeys = updatedNotes.map((note) => {\n    //   if (note.key > id) {\n    //     return { ...note, key: note.key - 1 };\n    //   }\n    //   return note;\n    // });\n\n    // setAllNotes(updatedNotesKeys);\n\n    // async function deleteData () {\n    //   console.log(\"posting data\");\n    //   const response = await fetch(\"http://localhost:5000/api/deleteData\", {\n    //     method: \"DELETE\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n\n    //     // converting userinput into json \n    //     body: JSON.stringify({\n    //       key: id\n    //     })\n    //   })\n    //   if(response?.status === 200) {\n    //     setDataUpdated(!dataUpdated);\n    //     //updateKeys?\n    //   }\n    // };\n\n    // deleteData(); // sending data \n\n    // useEffect(()=>{\n    //   fetch(\"/api\").then(\n    //     response => response.json() \n    //   ).then(\n    //     data =>{\n    //       setBackendData(data);\n    //       console.log(data);\n    //     }\n    //   )\n    // },[dataUpdated])\n  }\n  function CreateNotes(note) {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: note._id\n      // id={note.id}\n      ,\n      title: note.title,\n      content: note.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    });\n  }\n  function handleClick(event) {\n    console.log(title);\n    console.log(content);\n    event.preventDefault();\n    if (title.trim() === \"\" && content.trim() === \"\") {\n      alert(\"Please enter a title and content for your note\");\n      return;\n    } else if (title.trim() === \"\") {\n      alert(\"Please enter a title for your note\");\n      return;\n    } else if (content.trim === \"\") {\n      alert(\"Please enter some content in your note\");\n      return;\n    }\n\n    //write to mongodb\n    async function postData() {\n      console.log(\"posting data\");\n      const response = await fetch(\"http://localhost:5000/api/postData\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        // converting userinput into json \n        body: JSON.stringify({\n          title: title,\n          content: content\n        })\n      });\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        setDataUpdated(!dataUpdated);\n        setTitle(\"\");\n        setContent(\"\");\n      }\n    }\n    ;\n    postData(); // sending data \n\n    //fetch from mongodb\n\n    //setAllNotes([...allNotes, newNote]);\n\n    // setTitle(\"\");\n    // setContent(\"\");\n    // event.preventDefault();\n  }\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      setBackendData(data);\n      console.log(data);\n    });\n  }, [dataUpdated]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChangeTitle,\n    type: \"text\",\n    placeholder: \"Title\",\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleChangeContent,\n    type: \"text\",\n    placeholder: \"Take a note...\",\n    value: content,\n    rows: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"+\")), backendData.map(CreateNotes), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","Header","Note","Footer","App","title","setTitle","content","setContent","backendData","setBackendData","dataUpdated","setDataUpdated","handleChangeTitle","event","target","value","handleChangeContent","deleteNote","id","console","log","concat","CreateNotes","note","createElement","key","_id","onDelete","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","preventDefault","trim","alert","postData","response","fetch","method","headers","body","JSON","stringify","status","then","json","data","className","onSubmit","onChange","type","placeholder","rows","onClick","map"],"sources":["/Users/claudiacortell/Desktop/Barnard/Fall 2023/COMS 3102/final-project-keeper-app/client/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Note from \"./Note\";\n// import notes from \"../notes\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  // const [allNotes, setAllNotes] = useState(notes); //remove at some point\n  const [backendData, setBackendData] = useState([{}]); // storing backend data\n  const [dataUpdated, setDataUpdated] = useState(true); // useeffect dependency\n\n  function handleChangeTitle(event) {\n  //   console.log(event.target.value);\n    setTitle(event.target.value);\n  }\n\n  function handleChangeContent(event) {\n    // console.log(event.target.value);\n    setContent(event.target.value);\n  }\n\n  function deleteNote(id) {\n    console.log(`trying to delete ${id}`)\n    // const updatedNotes = allNotes.filter((note) => note.key !== id);\n\n    // const updatedNotesKeys = updatedNotes.map((note) => {\n    //   if (note.key > id) {\n    //     return { ...note, key: note.key - 1 };\n    //   }\n    //   return note;\n    // });\n\n    // setAllNotes(updatedNotesKeys);\n\n    // async function deleteData () {\n    //   console.log(\"posting data\");\n    //   const response = await fetch(\"http://localhost:5000/api/deleteData\", {\n    //     method: \"DELETE\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n\n    //     // converting userinput into json \n    //     body: JSON.stringify({\n    //       key: id\n    //     })\n    //   })\n    //   if(response?.status === 200) {\n    //     setDataUpdated(!dataUpdated);\n    //     //updateKeys?\n    //   }\n    // };\n\n    // deleteData(); // sending data \n\n    // useEffect(()=>{\n    //   fetch(\"/api\").then(\n    //     response => response.json() \n    //   ).then(\n    //     data =>{\n    //       setBackendData(data);\n    //       console.log(data);\n    //     }\n    //   )\n    // },[dataUpdated])\n  }\n\n  function CreateNotes(note) {\n    return (\n      <Note\n        key={note._id}\n        // id={note.id}\n        title={note.title}\n        content={note.content}\n        onDelete={deleteNote}\n      />\n    );\n  }\n\n\n  function handleClick(event) {\n    console.log(title);\n    console.log(content);\n\n    event.preventDefault();\n\n    if (title.trim() === \"\" && content.trim() === \"\") {\n      alert(\"Please enter a title and content for your note\");\n      return;\n    } else if (title.trim() === \"\"){\n      alert (\"Please enter a title for your note\");\n      return;\n    } else if (content.trim === \"\") {\n      alert(\"Please enter some content in your note\");\n      return;\n    }\n\n\n    //write to mongodb\n    async function postData () {\n      console.log(\"posting data\");\n      const response = await fetch(\"http://localhost:5000/api/postData\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n\n        // converting userinput into json \n        body: JSON.stringify({\n          title: title,\n          content: content,\n        })\n      })\n      if(response?.status === 200) {\n        setDataUpdated(!dataUpdated);\n        setTitle(\"\");\n        setContent(\"\");\n      }\n    };\n\n    postData(); // sending data \n\n    //fetch from mongodb\n  \n\n    //setAllNotes([...allNotes, newNote]);\n\n\n    // setTitle(\"\");\n    // setContent(\"\");\n    // event.preventDefault();\n  }\n\n  useEffect(()=>{\n    fetch(\"/api\").then(\n      response => response.json() \n    ).then(\n      data =>{\n        setBackendData(data);\n        console.log(data);\n      }\n    )\n  },[dataUpdated])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <form onSubmit={handleClick}>\n        <input\n          onChange={handleChangeTitle}\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n        />\n        <br />\n        <textarea\n          onChange={handleChangeContent}\n          type=\"text\"\n          placeholder=\"Take a note...\"\n          value={content}\n          rows=\"2\"\n        />\n        <br />\n        <button type=\"submit\" onClick={handleClick}>\n          +\n        </button>\n      </form>\n        {backendData.map(CreateNotes)}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}